{
    "$id": "https://raw.githubusercontent.com/a2g/Script/main/Script.json",
    "$schema": "http://json-schema.org/draft-07/schema",
    "description": "The game is made up of Objects(inv,reg,prop) and Script. The Script reference the Objects, and the objects are specific/unique to a game - so you'd expect they are too entangled to be able to factor out a reusable component. That certainly would be the case in xml schema. But Json schema is great!: the #requires# tag isn't statically checked - and long story short, this whole set of scripts, and the schema that enforces them can be factored out and re-used by multiple games/scanarios",
    "type": "object",
    "definitions": {
        "script_type": {
            "properties": {
                "script": {
                    "$ref": "#/definitions/the_enum"
                },
                "count": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100
                }
            },
            "required": [ "script" ],
            "allOf": [
                {
                    "if": {
                        "anyOf": [
                            {
                                "properties": {
                                    "script": {
                                        "const": "INV1_AND_INV2_GENERATE_INV3",
                                        "description": "eg none yet"
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "script": {
                                        "const": "INV1_AND_INV2_FORM_INV3",
                                        "description": "not quite the amp fixing - but close"
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "script": {
                                        "const": "INV1_BECOMES_INV2_VIA_KEEPING_INV3",
                                        "description": "eg FLAT BALL becomes INFLATED BALL via keeping PUMP"
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "script": {
                                        "const": "INV1_BECOMES_INV2_VIA_LOSING_INV3",
                                        "description": "eg broken amp becomes FIXED AMP via losing RADIO_TUBE"
                                    }
                                }
                            }
                        ]
                    },
                    "then": {
                        "required": [
                            "inv1",
                            "inv2",
                            "inv3"
                        ],
                        "not": {
                            "required": [
                                "prop1",
                                "prop2",
                                "prop3"
                            ]
                        }
                    }
                },
                {
                    "if": {
                        "anyOf": [
                            {
                                "properties": {
                                    "script": {
                                        "const": "INV1_WITH_PROP1_REVEALS_PROP2_KEPT_ALL",
                                        "description": "eg use ball with backboard generate prop"
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "script": {
                                        "const": "PROP1_BECOMES_PROP2_VIA_LOSING_INV1",
                                        "description": "powerpoint -> plugged-in-amp via losing INV_FIXEDAMP"
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "script": {
                                        "const": "PROP1_BECOMES_PROP2_VIA_KEEPING_INV1",
                                        "description": "eg RAISEDBACKBOARD becomes LOWEREDBACKBOARD vie keeping POLEHOOK",
                                        "title": " eg CLOSED_RADIO becomes  OPENED_RADIO_WITH_TUBE via keeping SCREWDRIVER"
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "script": {
                                        "const": "OBTAIN_INV1_VIA_PROP1_WITH_PROP2_LOSE_PROPS",
                                        "description": "eg use radiation suit with the meteor",
                                        "title": "By using the A with B you are able to obtain the INV"
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "script": {
                                        "const": "PROP1_BECOMES_PROP2_WHEN_GRAB_INV1",
                                        "description": "eg opened raio with radiotube becomes merely OPENED RADIO when you grab RADIOTUBE"
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "script": {
                                        "const": "PROP1_CHANGES_STATE_TO_PROP2_VIA_KEEPING_INV1",
                                        "description": "eg use radiation suit with the meteor",
                                        "title": "By using the A with B you are able to obtain the INV"
                                    }
                                }
                            }
                        ]
                    },
                    "then": {
                        "required": [
                            "inv1",
                            "prop1",
                            "prop2"
                        ],
                        "not": {
                            "required": [
                                "inv2",
                                "inv3",
                                "prop3"
                            ]
                        }
                    }
                },
                {
                    "if": {
                        "anyOf": [
                            {
                                "properties": {
                                    "script": {
                                        "const": "PROP1_BECOMES_PROP2_VIA_LOSING_PROP3",
                                        "description": "eg none yet"
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "script": {
                                        "const": "AUTO_PROP1_BECOMES_PROP2_VIA_PROPS",
                                        "description": "eg none yet"
                                    }
                                }
                            }
                        ]
                    },
                    "then": {
                        "required": [
                            "prop1",
                            "prop2",
                            "prop3"
                        ],
                        "not": {
                            "required": [
                                "inv1",
                                "inv2",
                                "inv3"
                            ]
                        }
                    }
                },
                {
                    "if": {
                        "anyOf": [
                            {
                                "properties": {
                                    "script": {
                                        "const": "PROP1_GOES_WHEN_GRAB_INV1",
                                        "description": "everywhere!"
                                    }
                                }
                            }
                        ]
                    },
                    "then": {
                        "required": [ "prop1", "inv1" ],
                        "not": {
                            "required": [
                                "prop2",
                                "prop3",
                                "inv2",
                                "inv3"
                            ]
                        }
                    }
                },
                {
                    "if": {
                        "anyOf": [
                            {
                                "properties": {
                                    "script": {
                                        "const": "TOGGLE_PROP1_BECOMES_PROP2_PROP_BECOMES_PROP",
                                        "description": "toggle magged up vacuum tubes"
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "script": {
                                        "const": "TOGGLE_PROP1_CHANGES_STATE_TO_PROP2",
                                        "description": "toggle on to off, or activated to deactivated"
                                    }
                                }
                            }
                        ]
                    },
                    "then": {
                        "required": [
                            "prop1",
                            "prop2"
                        ],
                        "not": {
                            "required": [
                                "prop3",
                                "inv1",
                                "inv2",
                                "inv3"
                            ]
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "script": {
                                "const": "AUTO_REG1_TRIGGERED_BY_PROPS",
                                "description": "updated the vacuum tube"
                            }
                        }
                    },
                    "then": {
                        "required": [ "reg1" ],
                        "not": {
                            "required": [
                                "inv1",
                                "inv2",
                                "inv3"
                            ]
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "script": {
                                "const": "INV1_BECOMES_INV2_VIA_KEEPING_PROP",
                                "description": "manuscript b edited via tpewriter"
                            }
                        }
                    },
                    "then": {
                        "required": [
                            "inv1",
                            "inv2",
                            "prop1"
                        ],
                        "not": {
                            "required": [
                                "inv3",
                                "prop2",
                                "prop3",
                                "prop4",
                                "prop5",
                                "prop6",
                                "prop7"
                            ]
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "script": {
                                "const": "AUTO_REG1_TRIGGERS_REG2"
                            }
                        }
                    },
                    "then": {
                        "required": [ "reg1", "reg2" ],
                        "not": {
                            "required": [
                                "prop1",
                                "prop2",
                                "prop3",
                                "inv1",
                                "inv2",
                                "inv3"
                            ]
                        }
                    }
                }
            ]
        },
        "the_enum": {
            "enum": [
                "HACK_TO_STOP_ALLOW_TS_TO_IMPORT_THIS_FILE",
                "INV1_AND_INV2_FORM_INV3",
                "INV1_AND_INV2_GENERATE_INV3",
                "INV1_BECOMES_INV2_VIA_KEEPING_INV3",
                "INV1_BECOMES_INV2_VIA_KEEPING_PROP1",
                "INV1_BECOMES_INV2_VIA_LOSING_INV3",
                "INV1_WITH_PROP1_REVEALS_PROP2_KEPT_ALL",
                "OBTAIN_INV1_VIA_PROP1_WITH_PROP2_LOSE_PROPS",
                "PROP1_BECOMES_PROP2_VIA_KEEPING_INV1",
                "PROP1_BECOMES_PROP2_VIA_KEEPING_PROP3",
                "PROP1_BECOMES_PROP2_VIA_LOSING_INV1",
                "PROP1_BECOMES_PROP2_VIA_LOSING_PROP3",
                "PROP1_BECOMES_PROP2_WHEN_GRAB_INV1",
                "PROP1_CHANGES_STATE_TO_PROP2_VIA_KEEPING_INV1",
                "PROP1_GOES_WHEN_GRAB_INV1",
                "TOGGLE_PROP1_BECOMES_PROP2",
                "TOGGLE_PROP1_CHANGES_STATE_TO_PROP2",
                "AUTO_REG1_TRIGGERED_BY_PROPS",
                "AUTO_REG1_TRIGGERS_REG2",
                "AUTO_PROP1_BECOMES_PROP2_VIA_PROPS"
            ]
        }
    },
    "HACK_TO_STOP_ALLOW_TS_TO_IMPORT_THIS_FILE": "HACK_TO_STOP_ALLOW_TS_TO_IMPORT_THIS_FILE",
    "INV1_AND_INV2_FORM_INV3": "INV1_AND_INV2_FORM_INV3",
    "INV1_AND_INV2_GENERATE_INV3": "INV1_AND_INV2_GENERATE_INV3",
    "INV1_BECOMES_INV2_VIA_KEEPING_INV3": "INV1_BECOMES_INV2_VIA_KEEPING_INV3",
    "INV1_BECOMES_INV2_VIA_KEEPING_PROP1": "INV1_BECOMES_INV2_VIA_KEEPING_PROP1",
    "INV1_BECOMES_INV2_VIA_LOSING_INV3": "INV1_BECOMES_INV2_VIA_LOSING_INV3",
    "INV1_WITH_PROP1_REVEALS_PROP2_KEPT_ALL": "INV1_WITH_PROP1_REVEALS_PROP2_KEPT_ALL",
    "OBTAIN_INV1_VIA_PROP1_WITH_PROP2_LOSE_PROPS": "OBTAIN_INV1_VIA_PROP1_WITH_PROP2_LOSE_PROPS",
    "PROP1_BECOMES_PROP2_VIA_KEEPING_INV1": "PROP1_BECOMES_PROP2_VIA_KEEPING_INV1",
    "PROP1_BECOMES_PROP2_VIA_KEEPING_PROP3": "PROP1_BECOMES_PROP2_VIA_KEEPING_PROP3",
    "PROP1_BECOMES_PROP2_VIA_LOSING_INV1": "PROP1_BECOMES_PROP2_VIA_LOSING_INV1",
    "PROP1_BECOMES_PROP2_VIA_LOSING_PROP3": "PROP1_BECOMES_PROP2_VIA_LOSING_PROP3",
    "PROP1_BECOMES_PROP2_WHEN_GRAB_INV1": "PROP1_BECOMES_PROP2_WHEN_GRAB_INV1",
    "PROP1_CHANGES_STATE_TO_PROP2_VIA_KEEPING_INV1": "PROP1_CHANGES_STATE_TO_PROP2_VIA_KEEPING_INV1",
    "PROP1_GOES_WHEN_GRAB_INV1": "PROP1_GOES_WHEN_GRAB_INV1",
    "TOGGLE_PROP1_BECOMES_PROP2": "TOGGLE_PROP1_BECOMES_PROP2",
    "TOGGLE_PROP1_CHANGES_STATE_TO_PROP2": "TOGGLE_PROP1_CHANGES_STATE_TO_PROP2",
    "AUTO_REG1_TRIGGERED_BY_PROPS": "AUTO_REG1_TRIGGERED_BY_PROPS",
    "AUTO_REG1_TRIGGERS_REG2": "AUTO_REG1_TRIGGERS_REG2",
    "AUTO_PROP1_BECOMES_PROP2_VIA_PROPS": "AUTO_PROP1_BECOMES_PROP2_VIA_PROPS"
}